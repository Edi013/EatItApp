-- Step 1: Create the Database
CREATE DATABASE EatItApp;

-- Step 2: Use the Database
USE EatItApp;

-- Step 3: Create the `users` table 
CREATE TABLE users (
    id CHAR(36) PRIMARY KEY,  -- UUID field stored as a CHAR(36)
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL
);

-- Step 4: Create the `products` table 
CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL UNIQUE,
    value DECIMAL(10, 2) NOT NULL  -- Adding value field to store price
);

-- Step 5: Create the `recipes` table 
CREATE TABLE recipes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description TEXT,
    estimatedCost DECIMAL(10, 2),
    createdBy CHAR(36) NOT NULL,  -- UUID foreign key
    FOREIGN KEY (createdBy) REFERENCES users(id) ON DELETE NO ACTION
);

-- Step 6: Create the `recipe_products` table
CREATE TABLE recipe_products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    recipe_id INT NOT NULL,
    product_id INT NOT NULL,
    quantity INT NOT NULL DEFAULT 0,
    FOREIGN KEY (recipe_id) REFERENCES recipes(id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(id) ON DELETE CASCADE
);

-- Step 7: Seed admin user
INSERT INTO users (id, username, password) 
VALUES 
(UUID(), 'admin', SHA2('admin', 256));  -- Using SHA256 to hash the password

-- Step 8: When an user is deleted, give the recipe to the admin
DELIMITER $$
CREATE TRIGGER set_creator_to_admin
AFTER DELETE ON users
FOR EACH ROW
BEGIN
    UPDATE recipes
    SET createdBy = (SELECT id FROM users WHERE username = 'admin')
    WHERE createdBy = OLD.id;
END $$

DELIMITER ;

-- Manually delete the fk, add it again with NO ACTION specified
SELECT CONSTRAINT_NAME 
FROM information_schema.KEY_COLUMN_USAGE
WHERE TABLE_NAME = 'recipes' AND COLUMN_NAME = 'createdBy';

ALTER TABLE recipes
DROP FOREIGN KEY recipes_ibfk_1 ;

ALTER TABLE recipes
ADD CONSTRAINT fk_createdBy_users
FOREIGN KEY (createdBy) REFERENCES users(id)
ON DELETE NO ACTION;

-- ALTER TABLE recipe_products
-- ADD COLUMN quantity INT NOT NULL DEFAULT 0;

-- Scripts used while developing 
SELECT * FROM users;
SELECT * FROM recipe_products;
